{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/multikart_react_all_in_one/frontend/pages/shop/common/brand.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { Collapse, Input } from \"reactstrap\";\nimport FilterContext from \"../../../helpers/filter/FilterContext\";\nconst GET_BRAND = gql`\n  query getBrands($type: String) {\n    getBrands(type: $type) {\n      brand\n    }\n  }\n`;\n\nconst Brand = () => {\n  const context = useContext(FilterContext);\n  const isChecked = context.isChecked;\n  const filterChecked = context.filterChecked;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggleBrand = () => setIsOpen(!isOpen);\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_BRAND, {\n    variables: {\n      type: context.state\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggleBrand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Marcas\"), __jsx(Collapse, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Brand;","map":{"version":3,"sources":["/Users/macbook/Desktop/multikart_react_all_in_one/frontend/pages/shop/common/brand.js"],"names":["React","useState","useContext","useQuery","gql","Collapse","Input","FilterContext","GET_BRAND","Brand","context","isChecked","filterChecked","isOpen","setIsOpen","toggleBrand","loading","data","variables","type","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,YAAhC;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,MAAMC,SAAS,GAAGJ,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMK,KAAK,GAAG,MAAM;AAClB,QAAMC,OAAO,GAAGR,UAAU,CAACK,aAAD,CAA1B;AACA,QAAMI,SAAS,GAAGD,OAAO,CAACC,SAA1B;AACA,QAAMC,aAAa,GAAGF,OAAO,CAACE,aAA9B;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMc,WAAW,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAnC;;AAEA,MAAI;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBd,QAAQ,CAACK,SAAD,EAAY;AAC1CU,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAET,OAAO,CAACU;AADL;AAD+B,GAAZ,CAAhC;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAqC,IAAA,OAAO,EAAEL,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF;AAmCD,CAhDD;;AAkDA,eAAeJ,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { Collapse, Input } from \"reactstrap\";\r\nimport FilterContext from \"../../../helpers/filter/FilterContext\";\r\n\r\nconst GET_BRAND = gql`\r\n  query getBrands($type: String) {\r\n    getBrands(type: $type) {\r\n      brand\r\n    }\r\n  }\r\n`;\r\n\r\nconst Brand = () => {\r\n  const context = useContext(FilterContext);\r\n  const isChecked = context.isChecked;\r\n  const filterChecked = context.filterChecked;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggleBrand = () => setIsOpen(!isOpen);\r\n\r\n  var { loading, data } = useQuery(GET_BRAND, {\r\n    variables: {\r\n      type: context.state,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"collection-collapse-block open\">\r\n      <h3 className=\"collapse-block-title\" onClick={toggleBrand}>\r\n        Marcas\r\n      </h3>\r\n      <Collapse isOpen={isOpen}>\r\n        <div className=\"collection-collapse-block-content\">\r\n          {/* <div className=\"collection-brand-filter\">\r\n            {!data || !data.getBrands || data.getBrands.length === 0 || loading\r\n              ? \"loading\"\r\n              : data &&\r\n                data.getBrands.brand.map((brand, index) => (\r\n                  <div\r\n                    className=\"custom-control custom-checkbox collection-filter-checkbox\"\r\n                    key={index}\r\n                  >\r\n                    <Input\r\n                      checked={context.selectedBrands.includes(brand)}\r\n                      onChange={() => {\r\n                        context.handleBrands(brand, isChecked);\r\n                      }}\r\n                      type=\"checkbox\"\r\n                      className=\"custom-control-input\"\r\n                      id={brand}\r\n                    />\r\n                    <label className=\"custom-control-label\" htmlFor={brand}>\r\n                      {brand}\r\n                    </label>\r\n                  </div>\r\n                ))}\r\n          </div> */}\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/multikart_react_all_in_one/frontend/pages/product-details/product/4_image_page.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport imageOne from \"../../../public/assets/images/fashion/pro/001.jpg\";\nimport imageTwo from \"../../../public/assets/images/fashion/pro/002.jpg\";\nimport imageThree from \"../../../public/assets/images/fashion/pro/003.jpg\";\nimport imageFour from \"../../../public/assets/images/fashion/pro/004.jpg\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        color\n        image_id\n        variant_id\n        size\n      }\n      images {\n        image_id\n        src\n      }\n    }\n  }\n`;\nconst imgData = [imageOne, imageTwo, imageThree, imageFour];\n\nconst FourImagePage = () => {\n  var {\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n  return __jsx(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-wrapper ratio_asos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    lg: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"product_image_4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, imgData.map((data, index) => {\n    return __jsx(Col, {\n      xs: \"6\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, __jsx(\"img\", {\n      src: data,\n      alt: \"\",\n      className: \"img-fluid blur-up lazyload bg-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    })));\n  }))), data ? __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(DetailsWithPrice, {\n    item: data.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })) : \"false\"))));\n};\n\nexport default FourImagePage;","map":{"version":3,"sources":["/Users/macbook/Desktop/multikart_react_all_in_one/frontend/pages/product-details/product/4_image_page.js"],"names":["React","useState","imageOne","imageTwo","imageThree","imageFour","DetailsWithPrice","Col","Container","Row","gql","useQuery","GET_SINGLE_PRODUCTS","imgData","FourImagePage","data","variables","id","map","index","product"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,OAAOC,UAAP,MAAuB,mDAAvB;AACA,OAAOC,SAAP,MAAsB,mDAAtB;AACA,OAAOC,gBAAP,MAA6B,wBAA7B;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,mBAAmB,GAAGF,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;AA6BA,MAAMG,OAAO,GAAG,CAACX,QAAD,EAAWC,QAAX,EAAqBC,UAArB,EAAiCC,SAAjC,CAAhB;;AAEA,MAAMS,aAAa,GAAG,MAAM;AAC1B,MAAI;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACC,mBAAD,EAAsB;AAC3CI,IAAAA,SAAS,EAAE;AACTC,MAAAA,EAAE,EAAE;AADK;AADgC,GAAtB,CAAvB;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACK,GAAR,CAAY,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC5B,WACE,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,GAAG,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEJ,IADP;AAEE,MAAA,GAAG,EAAC,EAFN;AAGE,MAAA,SAAS,EAAC,mCAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAWD,GAZA,CADH,CADF,CADF,EAkBGA,IAAI,GACH,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEA,IAAI,CAACK,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADG,GAKH,OAvBJ,CADF,CADF,CADF,CADF;AAkCD,CAzCD;;AA2CA,eAAeN,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport imageOne from \"../../../public/assets/images/fashion/pro/001.jpg\";\nimport imageTwo from \"../../../public/assets/images/fashion/pro/002.jpg\";\nimport imageThree from \"../../../public/assets/images/fashion/pro/003.jpg\";\nimport imageFour from \"../../../public/assets/images/fashion/pro/004.jpg\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        color\n        image_id\n        variant_id\n        size\n      }\n      images {\n        image_id\n        src\n      }\n    }\n  }\n`;\n\nconst imgData = [imageOne, imageTwo, imageThree, imageFour];\n\nconst FourImagePage = () => {\n  var { data } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1,\n    },\n  });\n\n  return (\n    <section>\n      <div className=\"collection-wrapper ratio_asos\">\n        <Container>\n          <Row>\n            <Col lg=\"6\">\n              <Row className=\"product_image_4\">\n                {imgData.map((data, index) => {\n                  return (\n                    <Col xs=\"6\" key={index}>\n                      <div>\n                        <img\n                          src={data}\n                          alt=\"\"\n                          className=\"img-fluid blur-up lazyload bg-img\"\n                        />\n                      </div>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </Col>\n            {data ? (\n              <Col lg=\"6\" className=\"rtl-text\">\n                <DetailsWithPrice item={data.product} />\n              </Col>\n            ) : (\n              \"false\"\n            )}\n          </Row>\n        </Container>\n      </div>\n    </section>\n  );\n};\n\nexport default FourImagePage;\n"]},"metadata":{},"sourceType":"module"}
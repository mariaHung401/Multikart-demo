{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/multikart_react_all_in_one/frontend/components/common/Collections/Collection8.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { Container, Row, Col } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox8';\nimport LeftCollection from './LeftCollection';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport CartContext from '../../../helpers/cart';\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst Collection = ({\n  type,\n  cartClass,\n  designClass\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const contextCompare = useContext(CompareContext);\n  const quantity = context.quantity;\n  var {\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(\"section\", {\n    className: designClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"partition3 partition_3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, __jsx(LeftCollection, {\n    type: type,\n    border: \"card-border\",\n    product: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), __jsx(Col, {\n    lg: \"4\",\n    className: \"center-slider border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"title2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"on sale\"), __jsx(\"h2\", {\n    className: \"title-inner2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"season sale\")), __jsx(Slider, {\n    className: \"offer-slider slide-1 center-image-width no-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, data && data.products.items.slice(0, 2).map((product, i) => __jsx(\"div\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, __jsx(ProductItem, {\n    product: product,\n    onAddToCompareClicked: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quantity),\n    cartClass: cartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 45\n    }\n  })))))), __jsx(Col, {\n    lg: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(LeftCollection, {\n    type: type,\n    border: \"card-border\",\n    product: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default Collection;","map":{"version":3,"sources":["/Users/macbook/Desktop/multikart_react_all_in_one/frontend/components/common/Collections/Collection8.js"],"names":["React","useContext","Slider","Container","Row","Col","useQuery","gql","ProductItem","LeftCollection","CompareContext","WishlistContext","CartContext","GET_PRODUCTS","Collection","type","cartClass","designClass","context","contextWishlist","contextCompare","quantity","data","variables","indexFrom","limit","products","items","slice","map","product","i","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { Container, Row, Col } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox8';\nimport LeftCollection from './LeftCollection';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport CartContext from '../../../helpers/cart';\n\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description\n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\n\nconst Collection = ({ type, cartClass, designClass }) => {\n    const context = useContext(CartContext)\n    const contextWishlist = useContext(WishlistContext);\n    const contextCompare = useContext(CompareContext);\n    const quantity = context.quantity;\n\n    var { data } = useQuery(GET_PRODUCTS, {\n        variables: {\n            type: type,\n            indexFrom:0,\n            limit:8\n        }\n    });\n\n    return (\n        <section className={designClass}>\n            <Container>\n                <Row className=\"partition3 partition_3\">\n                    <Col lg=\"4\">\n                        <LeftCollection type={type} border=\"card-border\" product={3} />\n                    </Col>\n                    <Col lg=\"4\" className=\"center-slider border-0\">\n                        <div>\n                            <div className=\"title2\">\n                                <h4>on sale</h4>\n                                <h2 className=\"title-inner2\">season sale</h2>\n                            </div>\n                                <Slider className=\"offer-slider slide-1 center-image-width no-arrow\">\n                                    {data && data.products.items.slice(0, 2).map((product, i) =>\n                                        <div key={i}>\n                                            <ProductItem product={product}\n                                                onAddToCompareClicked={() => contextCompare.addToCompare(product)}\n                                                addWishlist={() => contextWishlist.addToWish(product)}\n                                                addCart={() => context.addToCart(product,quantity)} cartClass={cartClass} />\n                                        </div>\n                                    )}\n                                </Slider>\n                        </div>\n                    </Col>\n                    <Col lg=\"4\">\n                        <LeftCollection type={type} border=\"card-border\" product={3} />\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\nexport default Collection;"]},"metadata":{},"sourceType":"module"}